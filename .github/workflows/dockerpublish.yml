name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason"
        required: false
        default: "Manual trigger"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: demo-inveniordm

jobs:
  push:

    name: Publish images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract GIT metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            # set latest tag for default branch (master)
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Populate image build timestamp
        id: date
        run: echo "IMAGE_BUILD_TIMESTAMP=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_ENV

      - name: Populate Sentry release tag for master branch
        run: echo "SENTRY_RELEASE=${{github.sha}}" >> $GITHUB_ENV
        if: ${{steps.meta.outputs.version == 'latest'}}

      - name: Populate Sentry release tag for a tagged release
        run: echo "SENTRY_RELEASE=${{steps.meta.outputs.version}}" >> $GITHUB_ENV
        if: ${{steps.meta.outputs.version != 'latest'}}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and publish image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            IMAGE_BUILD_TIMESTAMP=${{env.IMAGE_BUILD_TIMESTAMP}}
            SENTRY_RELEASE=${{env.SENTRY_RELEASE}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
